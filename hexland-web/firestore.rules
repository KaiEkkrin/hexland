rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // Existing adventures can be read or written only by their owner (TODO sharing...)
    // Any authenticated user can make a new adventure (TODO quota?)
    match /adventures/{id} {
      allow create: if request.auth != null;
      allow read, update, delete: if request.auth != null &&
        resource.data.owner == request.auth.uid;
    }

    // Existing maps can be read and written only by their owner (TODO sharing...)
    // Any authenticated user can make a new map (TODO quota?)
    match /maps/{id} {
      allow create: if request.auth != null;
      allow read, update, delete: if request.auth != null &&
        resource.data.owner == request.auth.uid;
    }

    // Map changes can be read, created and deleted by the map owner.
    // TODO map sharing too (read and create only; remember to validate the "user" field).
    match /maps/{mapId}/changes/{id} {
      allow read: if request.auth != null; // TODO FIX FIX
      allow write: if request.auth != null &&
        get(/databases/$(database)/documents/maps/$(mapId)).data.owner == request.auth.uid;
    }

    // Profiles can be read and written only by a user with the id matching the document
    match /profiles/{id} {
      allow create: if request.auth != null;
      allow read, update, delete: if request.auth != null && request.auth.uid == id;
    }

    // No writing anything else! :P
    match /{document=**} {
      allow read, write: if false;
    }   
  }
}